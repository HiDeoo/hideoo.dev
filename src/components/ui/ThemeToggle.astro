---
// https://web.dev/building-a-theme-switch-component/
---

<script is:inline>
  function toggleTheme() {
    updateTheme(document.documentElement.classList.contains('dark') ? 'light' : 'dark')
  }
</script>

<button
  aria-label="auto"
  id="theme-toggle"
  onclick="toggleTheme()"
  title="Toggle light & dark theme"
  type="button"
  class="prout"
>
  <svg width="24" height="24" viewBox="0 0 24 24" aria-hidden="true">
    <mask class="moon" id="moon-mask">
      <rect x="0" y="0" width="100%" height="100%" fill="white"></rect>
      <circle cx="24" cy="10" r="6" fill="black"></circle>
    </mask>
    <circle class="sun" cx="12" cy="12" r="6" mask="url(#moon-mask)" fill="currentColor"></circle>
    <g class="sun-beams" stroke="currentColor">
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </g>
  </svg>
</button>

<style>
  button {
    --animation-duration: var(--duration-400);

    align-items: center;
    background: none;
    border: none;
    border-radius: var(--rounded-full);
    cursor: pointer;
    display: flex;
    justify-content: center;
    outline: none;
    padding: 0;
    touch-action: manipulation;

    &:focus {
      outline: none;
    }

    &:focus-visible {
      box-shadow: 0 0 0 2px var(--bg-color), 0 0 0 4px var(--color);
    }
  }

  svg {
    stroke-linecap: round;

    & > :is(.moon, .sun, .sun-beams) {
      transform-origin: center;
    }

    & > :is(.moon, .sun) {
      fill: var(--color);

      :is(button:is(:hover, :focus-visible)) & {
        /* // TODO(HiDeoo)  */
        fill: var(--color);
        fill: red;
      }
    }

    & > .sun-beams {
      stroke: var(--color);
      stroke-width: 2px;

      :is(button:is(:hover, :focus-visible)) & {
        /* // TODO(HiDeoo)  */
        stroke: var(--color);
        stroke: red;
      }
    }

    :is(html.dark) & {
      & > .sun {
        transform: scale(1.75);
      }

      & > .sun-beams {
        opacity: 0;
      }

      & > .moon > circle {
        transform: translateX(-7px);

        @supports (cx: 1) {
          cx: 17;
          transform: translateX(0);
        }
      }
    }

    @media (--motionSafe) {
      & > .sun {
        transition: transform var(--animation-duration) var(--ease-elastic);
      }

      & > .sun-beams {
        transition: transform var(--animation-duration) var(--ease-elastic),
          opacity var(--animation-duration) var(--ease);
      }

      & .moon > circle {
        transition: transform calc(var(--animation-duration) / 2) var(--ease-out);

        @supports (cx: 1) {
          transition: cx calc(var(--animation-duration) / 2) var(--ease-out);
        }
      }

      :is(html.dark) & {
        & > .sun {
          transform: scale(1.75);
          transition-duration: calc(var(--animation-duration) / 2);
          transition-timing-function: var(--ease);
        }

        & > .sun-beams {
          transform: rotateZ(-25deg);
          transition-duration: calc(var(--animation-duration) / 4);
        }

        & > .moon > circle {
          transition-delay: calc(var(--animation-duration) / 4);
          transition-duration: var(--animation-duration);
        }
      }
    }
  }
</style>
